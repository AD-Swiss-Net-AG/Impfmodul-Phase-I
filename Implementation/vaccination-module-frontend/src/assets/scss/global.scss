@import './_breakpoints';
@import './vendor';

*,
body,
html {
  margin: 0;
  box-sizing: border-box;
}

:root {
  --text-color-base: rgba(0, 0, 0, 1);
  --text-color-secondary: rgba(0, 0, 0, 0.8);
  --accent-color: rgba(2, 101, 96, 1);
  --alert-color: rgba(204, 29, 16, 1);
  --background-color: rgb(255, 255, 255);

  --font-size-base: 12pt;
}

/* =============== variables  ================= */

/* =============== font family  ================= */

$font-family-base: Roboto, 'Helvetica Neue', sans-serif;

/* =============== fonts sizes  ================= */

/* =============== fonts colors ================= */

$line-height-base: 16px;

/* ========= spacer using padding and margin */

$padding: 16px;
$padding-left-right-50: 0 50px 0 50px;
$recorder-label-padding-left: 30px;
$form-field-padding: 0 30px 0 30px;

/* =============== mixin  ================= */

@mixin flex-center($JustifyContent, $AlignItems, $FlexDirection) {
  display: flex;
  justify-content: $JustifyContent;
  align-items: $AlignItems;
  flex-direction: $FlexDirection;
}

/* =============== classes ================= */
a:focus {
  box-shadow: 0 0 5px #000;
  padding: 5px;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

/*================= Entity detailed Component ========================*/
.detail-wrapper {
  display: grid;
  grid-template-columns: repeat(19, calc(5vw - 10px));
  grid-template-rows: auto;
  grid-gap: 10px;
  grid-column-gap: 10px;
  grid-row-gap: 10px;
  align-items: center;
  margin-top: 50px;

  &__card {
    grid-column-start: 2;
    grid-column-end: 13;
    &-title {
      color: var(--text-color-secondary);
      font-style: italic;
      transform: translateX(-16px);
    }
  }
  &__comment {
    grid-column-start: 13;
    grid-column-end: 18;
    grid-row-start: 1;
    grid-row-end: auto;
  }

  @include media-breakpoint(tm) {
    display: flex;
    flex-direction: column;
    margin-top: 20px;
  }
}

.detailed-card-content {
  .mat-form-field-autofill-control {
    color: var(--text-color-base);
  }
  .recorder {
    padding: 0;
    display: inline-flex;
    justify-content: space-evenly;
    &__label {
      font-size: calc(var(--font-size-base) * 0.75);
    }

    &--fields {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      column-gap: 30px;
      max-width: 100%;
      padding-right: 25px;
      width: 100% !important;
      @include media-breakpoint(tm) {
        display: flex;
        flex-direction: column;
        width: 100%;
        padding-right: 0;
      }
    }
  }
}
.mobile-detail-wrapper {
  width: 100vw;
  padding: 0;
  & .details__action {
    display: none;
  }
  & vm-comment {
    display: none;
  }
  .recorder {
    &--fields {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: repeat(3, 1fr);
      width: 100% !important;
    }
  }
}

@include media-breakpoint(tm) {
  .datesWrap {
    flex-direction: column !important;
  }
}
/*================= Entity form Component ========================*/
.detail-wrapper {
  .form-wrapper {
    &__form {
      display: flex;
      flex-direction: column;
      &-date-range {
        padding: 0;
      }

      &-recorder {
        padding: 0;
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        mat-label {
          font-size: calc(var(--font-size-base) * 0.85) !important;
          line-height: calc(var(--font-size-base) * 0.9 * 1.5) !important;
        }
        .recorder--fields {
          mat-label {
            font-size: calc(var(--font-size-base)) !important;
            line-height: calc(var(--font-size-base) * 0.9 * 1.5) !important;
          }
          .mat-mdc-form-field {
            width: 180px !important;
          }
        }

        & > *:nth-child(2) {
          padding: 0;
          display: inline-flex;
          justify-content: space-between;
        }
      }
    }

    .mobile-recorder {
      &--fields {
        display: flex;
        flex-direction: column;
        padding-top: 10px;
      }
    }
  }
}

/*================= Entity list Component ========================*/

.list-wrapper {
  margin-top: 30px;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(10, 1fr);
  column-gap: 10px;
  height: calc(100vh - 200px);

  & > :nth-child(1) {
    grid-column: 1 / 12;
    grid-row: 1 / 2;
    grid-column-start: 2;
    grid-row-start: 1;
    padding: 0;
  }

  & > :nth-child(2) {
    grid-column: 1 / 12;
    grid-row: 3 / 4;
    grid-column-start: 2;
    grid-row-start: 2;
    mat-header-cell,
    th {
      @for $i from 1 through 10 {
        width: calc(100% / $i) !important;
        &:nth-child(#{ $i }) {
          @if ($i == 1) {
            width: 1% !important;
          }
          @if ($i == 2) {
            width: 5% !important;
          }
        }
      }
    }
    td {
      @for $i from 1 through 10 {
        width: calc(100% / $i) !important;
        &:nth-child(#{ $i }) {
          @if ($i == 1) {
            width: 1% !important;
          }
          @if ($i == 2) {
            width: 5% !important;
          }
        }
      }
    }
  }
}
.mobile-list-wrapper {
  display: block;
  padding: 15px;
}

// =============== Navbar =================

.h3-header {
  font-size: calc(var(--font-size-base) * 1.125);
  color: var(--text-color-secondary);
  font-style: italic;
}

a {
  text-decoration: none;
  color: var(--text-color-base);
  font-size: var(--font-size-base);
  font-weight: 350;
  cursor: pointer;
}

.active {
  color: var(--text-color-base);
  font-weight: bold;
}

.spinner-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #ffffffc9;
  z-index: 9999;
  display: flex;
  justify-content: center;
  align-items: center;
}

.vm-progress-spinner {
  width: 100px !important;
  height: 100px !important;
}

.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,
.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic circle {
  stroke-width: 10%;
  stroke: var(--accent-color);
}

@include media-breakpoint(xs) {
  /*responsive style*/
  .mat- {
    &card {
      grid-template-columns: auto !important;
      flex-direction: column !important;
      max-height: 100% !important;
      &-subtitle {
        flex-direction: column !important;
      }

      & mat-form-field {
        width: 100%;
      }

      &-actions {
        margin-left: 0;
        margin-right: 0;
      }

      vm-common-card-footer .mat-card .footer-action-section {
        text-align: center;
      }

      &-details {
        margin-right: 0 !important;
      }

      &-header {
        flex-direction: column;
        max-height: none !important;
      }
    }

    &table {
      &-wrapper {
        overflow-x: auto;

        table {
          min-width: 600px;
        }
      }
    }
  }
}

.download-icon {
  font-size: 1.5rem;
  cursor: pointer;
  width: 25px;
  height: 25px;
  vertical-align: middle;
}
.help-icon {
  vertical-align: middle;
}

.commentsContent {
  display: none;

  background: var(--background-color-base);
  @include media-breakpoint(tm) {
    display: block;
    max-width: 100vw;
  }
  &_card {
    display: none;
    @include media-breakpoint(tm) {
      padding: 0;
      box-shadow: none !important;
      .comment-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;

        .comment-header__title {
          font-size: 1.5rem;
          font-weight: 400;
          padding-left: 0;
        }
      }
      &.active {
        display: block;
        margin-bottom: 15px;
        pre {
          word-break: break-word;
          white-space: pre-line;
        }
      }
    }
  }
}
.openComments,
.closeComments {
  margin: 1em 0;
  cursor: pointer;
}

@include media-breakpoint(tm) {
  vm-comment {
    display: none !important;
  }
}

// Material library changes
.mat-mdc-card {
  box-shadow: none;
  font-family: $font-family-base;

  .mat-mdc-card-title {
    color: rgba(0, 0, 0, 0.8);
  }

  .mat-mdc-form-field-subscript-wrapper {
    width: 100%;
    position: absolute;
    // aligns error message so that the date can be selected when it is present
    .mat-mdc-form-field-error-wrapper {
      width: 87% !important;
    }
  }

  .mdc-text-field {
    padding: 0;
    --mdc-filled-text-field-container-color: #ffffffc9;
    --mdc-filled-text-field-label-text-weight: 500;
  }

  .mat-mdc-form-field {
    width: 100%;
    margin-top: 6px;
    // Removes field border when hovering
    .mat-mdc-form-field-focus-overlay {
      position: unset !important;
    }
  }

  .mat-mdc-card-content {
    --mat-form-field-container-text-size: 14px;
    --mat-form-field-container-text-line-height: 1.125;
    --mat-form-field-container-text-weight: 400;
    // Details view form field background color
    --mdc-filled-text-field-disabled-container-color: #ffffffc9;
    --mdc-filled-text-field-disabled-input-text-color: black;
    // Date picker calendar colors when no date and calendar icon are selected
    --mat-datepicker-toggle-active-state-icon-color: #673ab7;
    --mdc-filled-text-field-focus-active-indicator-color: #673ab7;
    // Drop-down arrow color when clicked
    --mat-select-focused-arrow-color: #673ab7;
    --mdc-filled-text-field-focus-label-text-color: #673ab7;
  }

  // Details view buttons
  .mat-mdc-card-actions {
    .mdc-button--raised {
      margin-right: -2px;
      margin-left: 8px;
    }
  }

  // Date picker align
  .mat-mdc-icon-button svg {
    width: 14px;
    margin-left: 23px;
    margin-bottom: -9px;
  }
}

// Common option label styling
.mat-mdc-option {
  --mat-option-label-text-size: 14px;
  --mat-option-label-text-weight: 500;
  --mat-option-selected-state-label-text-color: #673ab7;
  --mat-minimal-pseudo-checkbox-selected-checkmark-color: #673ab7;

  white-space: nowrap !important;
  // Nowrap for drop-down rows
  .mdc-list-item__primary-text {
    white-space: inherit !important;
    overflow: hidden !important;
    text-overflow: ellipsis !important;
  }
}

// Removes border for calendar date
.mat-focus-indicator::before {
  border: none !important;
}

// Removes buttons border when clicked
.mat-mdc-focus-indicator::before {
  border: none !important;
}

// Common color for the buttons
.mat-mdc-raised-button.mat-accent {
  --mdc-protected-button-container-color: rgba(2, 101, 96, 1);
}

// Details view mat-mdc-card
.mat-elevation-z10 {
  box-shadow: 0 6px 6px -3px #0003, 0 10px 14px 1px #00000024, 0 4px 18px 3px #0000001f !important;
}

// Mobile view specific - Dotted line between rows on details view
.mdc-line-ripple::before,
.mdc-line-ripple::after {
  bottom: 7px !important;
  height: 1px;
}

// Remove buttons and tooltips border when hovering
.mat-mdc-button-persistent-ripple::before {
  content: none !important;
}

// Selected calendar date styling
.mat-calendar-body-selected {
  --mat-datepicker-calendar-date-selected-state-background-color: #673ab7;
  --mat-datepicker-calendar-date-selected-state-text-color: white;
}

// Date picker fields when hovering
@media (hover: hover) {
  .mat-calendar-body-cell {
    --mat-datepicker-calendar-date-hover-state-background-color: #673ab74d;
    --mat-datepicker-calendar-date-focus-state-background-color: #673ab74d;
  }
}

// General error validation messages alignment
.mat-mdc-form-field-error {
  margin-top: 23px !important;
  margin-left: -15px !important;
  margin-right: -22px !important;
  height: 0 !important;
  padding-top: 1px;
}

// Adjusts the date input field's position to ensure it remains clickable when an error message is displayed,
// addressing compatibility issues in Chrome and Edge browsers.
.mat-mdc-form-field-error-wrapper {
  position: absolute;
  top: 100%;
  z-index: 1;
  pointer-events: none;
}
